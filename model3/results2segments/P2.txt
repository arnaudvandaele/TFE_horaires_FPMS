00:19:30
0.9674839973449707
Model: runModel4
 - source file: D:/Thomas/Documents/UNIF/MA2/TFE/Solver/model3/runModel4.py
 - modeling time: 1.03 sec
 - number of integer variables:  0
 - number of interval variables: 234
 - number of expressions:        1009
 - number of expression nodes:   3881
 - operations:                   _trunc: 206, and: 152, endBeforeStart: 61, endOf: 324, equal: 125, floatDiv: 206, forbidExtent: 192, forbidStart: 90, greaterOrEqual: 258, lessOrEqual: 324, minimize: 1, noOverlap: 144, or: 35, scalProd: 1, startEval: 106, startOf: 552, sum: 2
StartSolve: Unknown, objective: None bounds: None, gaps: None, time: 0, memory: 1187680
StartExtraction: Unknown, objective: None bounds: None, gaps: None, time: 0, memory: 1190608
 ! --------------------------------------------------- CP Optimizer 20.1.0.0 --
 ! Minimization problem - 378 variables, 1007 constraints
 ! Presolve      : 192 extractables eliminated, 42 constraints generated
 ! TimeLimit            = 5400
 ! LogVerbosity         = Terse
 ! Initial process time : 0.02s (0.02s extraction + 0.00s propagation)
 !  . Log search space  : 928.2 (before), 928.2 (after)
 !  . Memory usage      : 3.2 MB (before), 3.2 MB (after)
 ! Using parallel search with 12 workers.
 ! ----------------------------------------------------------------------------
 !          Best Branches  Non-fixed    W       Branch decision
EndExtraction: Unknown, objective: None bounds: None, gaps: None, time: 0.016, memory: 4732368
StartSearch: Unknown, objective: None bounds: None, gaps: None, time: 0.022, memory: 4738872
StartInitialPropagation: Unknown, objective: None bounds: None, gaps: None, time: 0.022, memory: 4739848
EndInitialPropagation: Unknown, objective: None bounds: None, gaps: None, time: 0.025, memory: 4936960
                        0        324                 -
 + New bound is 0
ObjBound: Unknown, objective: None bounds: (0,), gaps: None, time: 0.025, memory: 4937378
 ! Using iterative diving.
 ! Using temporal relaxation.
 ! Using failure-directed search.
 *            79   10511k  1956.63s     1      (gap is 100.0%)
Solution: Feasible, objective: (79,) bounds: (0,), gaps: (1,), time: 1956.63, memory: 51871956
 *            75   10523k  1958.11s     1      (gap is 100.0%)
Solution: Feasible, objective: (75,) bounds: (0,), gaps: (1,), time: 1958.11, memory: 52705831
 *            62   10523k  1958.12s     1      (gap is 100.0%)
Solution: Feasible, objective: (62,) bounds: (0,), gaps: (1,), time: 1958.11, memory: 52705855
 *            56   10523k  1958.66s     1      (gap is 100.0%)
Solution: Feasible, objective: (56,) bounds: (0,), gaps: (1,), time: 1958.66, memory: 52967394
 *            52   10525k  1958.89s     1      (gap is 100.0%)
Solution: Feasible, objective: (52,) bounds: (0,), gaps: (1,), time: 1958.89, memory: 63624075
 *            46   10529k  1958.89s     1      (gap is 100.0%)
Solution: Feasible, objective: (46,) bounds: (0,), gaps: (1,), time: 1958.89, memory: 63622000
 *            43   10529k  1958.89s     1      (gap is 100.0%)
Solution: Feasible, objective: (43,) bounds: (0,), gaps: (1,), time: 1958.89, memory: 63621192
 *            41   10530k  1959.05s     1      (gap is 100.0%)
Solution: Feasible, objective: (41,) bounds: (0,), gaps: (1,), time: 1959.05, memory: 63886021
 *            39    14809  1959.61s    12      (gap is 100.0%)
Solution: Feasible, objective: (39,) bounds: (0,), gaps: (1,), time: 1959.61, memory: 66357918
 *            38    17682  1959.93s    12      (gap is 100.0%)
Solution: Feasible, objective: (38,) bounds: (0,), gaps: (1,), time: 1959.93, memory: 67541106
 *            36    20337  1960.09s    11      (gap is 100.0%)
Solution: Feasible, objective: (36,) bounds: (0,), gaps: (1,), time: 1960.09, memory: 67814206
 *            34    33001  1960.74s    10      (gap is 100.0%)
Solution: Feasible, objective: (34,) bounds: (0,), gaps: (1,), time: 1960.74, memory: 67983252
 *            32    34421  1961.23s    10      (gap is 100.0%)
Solution: Feasible, objective: (32,) bounds: (0,), gaps: (1,), time: 1961.23, memory: 68117410
 *            30    33489  1962.25s    11      (gap is 100.0%)
Solution: Feasible, objective: (30,) bounds: (0,), gaps: (1,), time: 1962.25, memory: 68215349
 *            29    46000  1963.47s    12      (gap is 100.0%)
Solution: Feasible, objective: (29,) bounds: (0,), gaps: (1,), time: 1963.46, memory: 68290560
 *            28    49918  1966.00s    10      (gap is 100.0%)
Solution: Feasible, objective: (28,) bounds: (0,), gaps: (1,), time: 1965.99, memory: 68370746
 *            25    51347  1966.34s    10      (gap is 100.0%)
Solution: Feasible, objective: (25,) bounds: (0,), gaps: (1,), time: 1966.34, memory: 68432834
 *            23    52580  1966.50s    10      (gap is 100.0%)
Solution: Feasible, objective: (23,) bounds: (0,), gaps: (1,), time: 1966.5, memory: 68494270
 *            20    70099  1970.47s    10      (gap is 100.0%)
 ! Time = 1970.47s, Average fail depth = 109, Memory usage = 68.6 MB
 ! Current bound is 0 (gap is 100.0%)
 !          Best Branches  Non-fixed    W       Branch decision
Solution: Feasible, objective: (20,) bounds: (0,), gaps: (1,), time: 1970.47, memory: 68577498
 *            19     107k  1971.47s    12      (gap is 100.0%)
Solution: Feasible, objective: (19,) bounds: (0,), gaps: (1,), time: 1971.47, memory: 68644870
 *            18     111k  1971.97s    12      (gap is 100.0%)
Solution: Feasible, objective: (18,) bounds: (0,), gaps: (1,), time: 1971.96, memory: 68779477
 *            17     111k  1971.97s    12      (gap is 100.0%)
Solution: Feasible, objective: (17,) bounds: (0,), gaps: (1,), time: 1971.97, memory: 68774573
 *            16     131k  1974.61s    11      (gap is 100.0%)
Solution: Feasible, objective: (16,) bounds: (0,), gaps: (1,), time: 1974.6, memory: 68852343
 *            14     132k  1981.97s    10      (gap is 100.0%)
Solution: Feasible, objective: (14,) bounds: (0,), gaps: (1,), time: 1981.97, memory: 68967307
 *            13     219k  1982.13s    11      (gap is 100.0%)
Solution: Feasible, objective: (13,) bounds: (0,), gaps: (1,), time: 1982.13, memory: 69037160
 *            12     354k  2005.71s    10      (gap is 100.0%)
Solution: Feasible, objective: (12,) bounds: (0,), gaps: (1,), time: 2005.71, memory: 69237118
 *            11     413k  2005.88s    11      (gap is 100.0%)
Solution: Feasible, objective: (11,) bounds: (0,), gaps: (1,), time: 2005.87, memory: 69296611
 *             9     398k  2014.42s    10      (gap is 100.0%)
Solution: Feasible, objective: (9,) bounds: (0,), gaps: (1,), time: 2014.42, memory: 69382095
 *             7     636k  2039.13s    12      (gap is 100.0%)
Solution: Feasible, objective: (7,) bounds: (0,), gaps: (1,), time: 2039.12, memory: 69476924
 *             6    1064k  2093.63s    10      (gap is 100.0%)
Solution: Feasible, objective: (6,) bounds: (0,), gaps: (1,), time: 2093.63, memory: 69698328
12h - 00h ?
 ! ----------------------------------------------------------------------------
 ! Search terminated by limit, 30 solutions found.
 ! Best objective         : 6 (gap is 100.0%)
 ! Best bound             : 0
 ! ----------------------------------------------------------------------------
 ! Number of branches     : 1621339394
 ! Number of fails        : 375633249
 ! Total memory usage     : 82.6 MB (82.4 MB CP Optimizer + 0.2 MB Concert)
 ! Time spent in solve    : 5400.18s (5400.17s engine + 0.02s extraction)
 ! Search speed (br. / s) : 300239.0
 ! ----------------------------------------------------------------------------
EndSearch: Feasible, objective: None bounds: None, gaps: None, time: 5400.18, memory: 82445138
EndSolve: Feasible, objective: None bounds: None, gaps: None, time: 5400.18, memory: 82444882
5400.56812787056
-------------------------------------------------------------------------------
Model constraints: 1007, variables: integer: 0, interval: 234, sequence: 144
Solve status: Feasible
Search status: SearchStopped, stop cause: SearchStoppedByLimit
Solve time: 5400.2 sec
-------------------------------------------------------------------------------
Objective values: (6,), bounds: (0,), gaps: (1,)
Variables:
   I-AUTO-023_lec_0 = (5, 6, 1)
   I-AUTO-023_lec_1 = (32, 33, 1)
   I-AUTO-023_lec_2 = (9, 10, 1)
   I-AUTO-023_lec_3 = (33, 34, 1)
   I-AUTO-123_tp_0_g_0 = (10, 12, 2)
   I-AUTO-123_tp_0_g_1 = (14, 16, 2)
   I-AUTO-123_tp_1_g_0 = (22, 24, 2)
   I-AUTO-123_tp_1_g_1 = (34, 36, 2)
   I-FLMA-001_ex_0_g_0 = (12, 13, 1)
   I-FLMA-001_ex_1_g_0 = (17, 18, 1)
   I-GCMS-005_tp_0_g_0 = (14, 16, 2)
   I-GCMS-005_tp_1_g_0 = (22, 24, 2)
   I-GCMS-021_ex_0_g_0 = (10, 11, 1)
   I-GCMS-021_lec_0 = (8, 9, 1)
   I-GCMS-022_ex_0_g_0 = (4, 5, 1)
   I-GCMS-022_ex_1_g_0 = (37, 38, 1)
   I-GCMS-022_lec_0 = (1, 2, 1)
   I-GCMS-022_lec_1 = (21, 22, 1)
   I-GCMS-022_lec_2 = (36, 37, 1)
   I-GEOL-001_ex_0_g_0 = (18, 19, 1)
   I-GEOL-001_ex_1_g_0 = (26, 27, 1)
   I-GEOL-001_lec_0 = (5, 6, 1)
   I-GEOL-001_lec_1 = (20, 21, 1)
   I-GEOL-001_tp_0_g_0 = (6, 8, 2)
   I-GEOL-001_tp_1_g_0 = (32, 34, 2)
   I-GEOL-002_lec_0 = (0, 1, 1)
   I-GEOL-002_lec_1 = (21, 22, 1)
   I-GMEC-021_lec_0 = (2, 3, 1)
   I-GMEC-021_lec_1 = (21, 22, 1)
   I-GMEC-021_tp_0_g_0 = (6, 8, 2)
   I-GMEC-021_tp_0_g_1 = (8, 10, 2)
   I-GMEC-021_tp_0_g_2 = (16, 18, 2)
   I-GMEC-021_tp_0_g_3 = (14, 16, 2)
   I-GMEC-021_tp_1_g_0 = (24, 26, 2)
   I-GMEC-021_tp_1_g_1 = (22, 24, 2)
   I-GMEC-021_tp_1_g_2 = (36, 38, 2)
   I-GMEC-021_tp_1_g_3 = (34, 36, 2)
   I-GMEC-023_lec_0 = (25, 26, 1)
   I-GMEC-023_tp_0_g_0 = (18, 20, 2)
   I-GMEC-023_tp_0_g_1 = (2, 4, 2)
   I-GMEC-023_tp_1_g_0 = (30, 32, 2)
   I-GMEC-023_tp_1_g_1 = (26, 28, 2)
   I-GMEC-023_tp_2_g_0 = (38, 40, 2)
   I-GMEC-023_tp_2_g_1 = (28, 30, 2)
   I-GMEC-101_lec_0 = (0, 1, 1)
   I-GMEC-101_lec_1 = (20, 21, 1)
   I-GMEC-101_lec_2 = (13, 14, 1)
   I-GMIN-001_ex_0_g_0 = (13, 14, 1)
   I-GMIN-001_lec_0 = (1, 2, 1)
   I-GMIN-001_lec_1 = (25, 26, 1)
   I-GMIN-011_lec_0 = (4, 5, 1)
   I-GMIN-011_lec_1 = (28, 29, 1)
   I-GMIN-011_lec_2 = (9, 10, 1)
   I-GPRO-001_lec_0 = (9, 10, 1)
   I-GPRO-001_lec_1 = (21, 22, 1)
   I-GPRO-028_tp_0_g_0 = (6, 8, 2)
   I-GPRO-028_tp_0_g_1 = (2, 4, 2)
   I-GPRO-028_tp_1_g_0 = (22, 24, 2)
   I-GPRO-028_tp_1_g_1 = (34, 36, 2)
   I-GPRO-029_tp_0_g_0 = (28, 30, 2)
   I-GRCM-031A_pr_0 = (2, 4, 2)
   I-GRME-035_tp_0_g_0 = (6, 8, 2)
   I-GRME-035_tp_1_g_0 = (22, 24, 2)
   I-ILIA-002_tp_0_g_0 = (2, 4, 2)
   I-ILIA-002_tp_0_g_1 = (10, 12, 2)
   I-ILIA-002_tp_0_g_2 = (18, 20, 2)
   I-ILIA-002_tp_0_g_3 = (4, 6, 2)
   I-ILIA-002_tp_1_g_0 = (38, 40, 2)
   I-ILIA-002_tp_1_g_1 = (28, 30, 2)
   I-ILIA-002_tp_1_g_2 = (26, 28, 2)
   I-ILIA-002_tp_1_g_3 = (30, 32, 2)
   I-ILIA-004_tp_0_g_0 = (14, 16, 2)
   I-ILIA-004_tp_1_g_0 = (22, 24, 2)
   I-ILIA-024_lec_0 = (13, 14, 1)
   I-ILIA-024_pr_0 = (18, 20, 2)
   I-ILIA-024_pr_1 = (38, 40, 2)
   I-ILIA-100_ch2_0 = (6, 8, 2)
   I-ILIA-100_ch2_1 = (26, 28, 2)
   I-ISIA-001_tp_0_g_0 = (2, 4, 2)
   I-ISIA-001_tp_1_g_0 = (30, 32, 2)
   I-ISIA-021_lec_0 = (4, 5, 1)
   I-ISIA-021_lec_1 = (21, 22, 1)
   I-ISIA-021_lec_2 = (13, 14, 1)
   I-ISIA-021_tp_0_g_0 = (14, 16, 2)
   I-ISIA-021_tp_1_g_0 = (26, 28, 2)
   I-ISIA-030_ex_0_g_0 = (2, 3, 1)
   I-ISIA-030_ex_1_g_0 = (20, 21, 1)
   I-ISIA-030_tp_0_g_0 = (6, 8, 2)
   I-ISIA-030_tp_1_g_0 = (34, 36, 2)
   I-MANA-002_lec_0 = (13, 14, 1)
   I-MANA-002_lec_1 = (37, 38, 1)
   I-MANA-102_ch2_0 = (10, 12, 2)
   I-MANA-102_ch2_1 = (30, 32, 2)
   I-MARO-004_ex_0_g_0 = (7, 8, 1)
   I-MARO-004_lec_0 = (0, 1, 1)
   I-MARO-004_lec_1 = (33, 34, 1)
   I-MARO-004_tp_0_g_0 = (18, 20, 2)
   I-MARO-004_tp_0_g_1 = (10, 12, 2)
   I-MARO-014_lec_0 = (4, 5, 1)
   I-MARO-014_tp_0_g_0 = (26, 28, 2)
   I-MARO-020_ex_0_g_0 = (3, 4, 1)
   I-MARO-020_ex_1_g_0 = (29, 30, 1)
   I-MARO-020_lec_0 = (1, 2, 1)
   I-MARO-020_lec_1 = (28, 29, 1)
   I-MARO-021_ex_0_g_0 = (16, 17, 1)
   I-MARO-021_ex_0_g_1 = (9, 10, 1)
   I-MARO-021_ex_1_g_0 = (36, 37, 1)
   I-MARO-021_ex_1_g_1 = (38, 39, 1)
   I-MARO-021_lec_0 = (5, 6, 1)
   I-MARO-021_lec_1 = (32, 33, 1)
   I-MARO-024_ex_0_g_0 = (22, 23, 1)
   I-MARO-024_lec_0 = (17, 18, 1)
   I-MARO-024_lec_1 = (20, 21, 1)
   I-MARO-025_lec_0 = (12, 13, 1)
   I-MARO-025_lec_1 = (36, 37, 1)
   I-MARO-035_ex_0_g_0 = (1, 2, 1)
   I-MARO-035_lec_0 = (25, 26, 1)
   I-MARO-036_ex_0_g_0 = (10, 11, 1)
   I-MARO-036_ex_1_g_0 = (33, 34, 1)
   I-MARO-036_lec_0 = (8, 9, 1)
   I-MARO-036_lec_1 = (21, 22, 1)
   I-MARO-036_lec_2 = (9, 10, 1)
   I-MARO-036_lec_3 = (29, 30, 1)
   I-MARO-120_ch2_0 = (18, 20, 2)
   I-MARO-120_ch2_1 = (38, 40, 2)
   I-MARO-121_ch2_0 = (2, 4, 2)
   I-MARO-121_ch2_1 = (22, 24, 2)
   I-META-001_lec_0 = (5, 6, 1)
   I-META-001_lec_1 = (20, 21, 1)
   I-META-001_tp_0_g_0 = (14, 16, 2)
   I-META-001_tp_1_g_0 = (38, 40, 2)
   I-MRDV-020_ex_0_g_0 = (13, 14, 1)
   I-MRDV-022_ex_0_g_0 = (6, 7, 1)
   I-MRDV-022_ex_1_g_0 = (23, 24, 1)
   I-MRDV-022_lec_0 = (1, 2, 1)
   I-MRDV-022_tp_0_g_0 = (10, 12, 2)
   I-MRDV-022_tp_0_g_1 = (2, 4, 2)
   I-MRDV-022_tp_0_g_2 = (4, 6, 2)
   I-MRDV-022_tp_0_g_3 = (18, 20, 2)
   I-MRDV-023_lec_0 = (21, 22, 1)
   I-MRDV-023_tp_0_g_0 = (26, 28, 2)
   I-MRDV-023_tp_0_g_1 = (30, 32, 2)
   I-MRDV-023_tp_0_g_2 = (38, 40, 2)
   I-MRDV-023_tp_0_g_3 = (28, 30, 2)
   I-MRDV-120_ch2_0 = (10, 12, 2)
   I-MRDV-120_ch2_1 = (30, 32, 2)
   I-PHYS-020_ex_0_g_0 = (17, 18, 1)
   I-PHYS-020_ex_0_g_1 = (8, 9, 1)
   I-PHYS-020_lec_0 = (4, 5, 1)
   I-PHYS-020_lec_1 = (20, 21, 1)
   I-PHYS-020_tp_0_g_0 = (34, 36, 2)
   I-PHYS-020_tp_0_g_1 = (38, 40, 2)
   I-PHYS-020_tp_0_g_2 = (24, 26, 2)
   I-PHYS-020_tp_0_g_3 = (22, 24, 2)
   I-PHYS-022_ex_0_g_0 = (35, 36, 1)
   I-PHYS-022_lec_0 = (16, 17, 1)
   I-POLY-010_lec_0 = (12, 13, 1)
   I-POLY-010_lec_1 = (33, 34, 1)
   I-POLY-011_pr_0 = (18, 20, 2)
   I-POLY-011_pr_1 = (26, 28, 2)
   I-POLY-012_ch2_0 = (14, 16, 2)
   I-POLY-012_ch2_1 = (34, 36, 2)
   I-SDMA-014_lec_0 = (4, 5, 1)
   I-SDMA-014_lec_1 = (25, 26, 1)
   I-SDMA-014_lec_2 = (8, 9, 1)
   I-SDMA-014_tp_0_g_0 = (18, 20, 2)
   I-SDMA-014_tp_1_g_0 = (26, 28, 2)
   I-SDMA-020_lec_0 = (0, 1, 1)
   I-SDMA-020_tp_0_g_0 = (8, 10, 2)
   I-SDMA-020_tp_0_g_1 = (14, 16, 2)
   I-SDMA-020_tp_0_g_2 = (6, 8, 2)
   I-SDMA-020_tp_0_g_3 = (16, 18, 2)
   I-SDMA-020_tp_1_g_0 = (38, 40, 2)
   I-SDMA-020_tp_1_g_1 = (34, 36, 2)
   I-SDMA-020_tp_1_g_2 = (22, 24, 2)
   I-SDMA-020_tp_1_g_3 = (24, 26, 2)
   I-SDMA-022_lec_0 = (8, 9, 1)
   I-SDMA-022_lec_1 = (24, 25, 1)
   I-SDMA-022_lec_2 = (25, 26, 1)
   I-SDMA-022_tp_0_g_0 = (30, 32, 2)
   I-SDMA-022_tp_0_g_1 = (26, 28, 2)
   I-SDMA-022_tp_0_g_2 = (28, 30, 2)
   I-SDMA-022_tp_0_g_3 = (38, 40, 2)
   I-SDMA-120_ch2_0 = (6, 8, 2)
   I-SDMA-120_ch2_1 = (26, 28, 2)
   I-SDMA-121_ch2_0 = (14, 16, 2)
   I-SDMA-121_ch2_1 = (34, 36, 2)
   I-SEMI-001_lec_0 = (16, 17, 1)
   I-SEMI-001_lec_1 = (24, 25, 1)
   I-SEMI-001_tp_0_g_0 = (38, 40, 2)
   I-SEMI-001_tp_0_g_1 = (36, 38, 2)
   I-SEMI-001_tp_0_g_2 = (28, 30, 2)
   I-SEMI-001_tp_0_g_3 = (30, 32, 2)
   I-TELE-004_lec_0 = (0, 1, 1)
   I-TELE-004_lec_1 = (28, 29, 1)
   I-TELE-004_lec_2 = (1, 2, 1)
   I-TELE-004_lec_3 = (29, 30, 1)
   I-TELE-004_tp_0_g_0 = (6, 8, 2)
   I-TELE-004_tp_0_g_1 = (18, 20, 2)
   I-TELE-004_tp_1_g_0 = (34, 36, 2)
   I-TELE-004_tp_1_g_1 = (38, 40, 2)
   I-TRMO-003_lec_0 = (0, 1, 1)
   I-TRMO-003_lec_1 = (36, 37, 1)
   I-TRMO-003_lec_2 = (1, 2, 1)
   I-TRMO-003_lec_3 = (37, 38, 1)
   I-TRMO-020_ex_0_g_0 = (14, 15, 1)
   I-TRMO-020_ex_1_g_0 = (34, 35, 1)
   I-TRMO-020_lec_0 = (9, 10, 1)
   I-TRMO-020_lec_1 = (32, 33, 1)
   I-TRMO-120_ch2_0 = (2, 4, 2)
   I-TRMO-120_ch2_1 = (22, 24, 2)
   S-INFO-013_lec_0 = (0, 1, 1)
   S-INFO-013_lec_1 = (28, 29, 1)
   S-INFO-013_tp_0_g_0 = (36, 38, 2)
   V-LANG-153_ex_0_g_0 = (15, 16, 1)
   V-LANG-153_ex_0_g_1 = (4, 5, 1)
   V-LANG-153_ex_0_g_2 = (2, 3, 1)
   V-LANG-153_ex_0_g_3 = (2, 3, 1)
   V-LANG-153_ex_1_g_0 = (28, 29, 1)
   V-LANG-153_ex_1_g_1 = (38, 39, 1)
   V-LANG-153_ex_1_g_2 = (30, 31, 1)
   V-LANG-153_ex_1_g_3 = (27, 28, 1)
   V-LANG-155_ex_0_g_0 = (19, 20, 1)
   V-LANG-155_ex_0_g_1 = (8, 9, 1)
   V-LANG-155_ex_0_g_2 = (3, 4, 1)
   V-LANG-155_ex_0_g_3 = (11, 12, 1)
   V-LANG-155_ex_1_g_0 = (30, 31, 1)
   V-LANG-155_ex_1_g_1 = (20, 21, 1)
   V-LANG-155_ex_1_g_2 = (26, 27, 1)
   V-LANG-155_ex_1_g_3 = (32, 33, 1)
   V-LANG-161_ch2_0 = (0, 2, 2)
   V-LANG-161_ch2_1 = (20, 22, 2)
   V-LANG-162_ch2_0 = (4, 6, 2)
   V-LANG-162_ch2_1 = (24, 26, 2)
23.25619125366211