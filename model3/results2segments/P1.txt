06:30:12
1.4665541648864746
Model: runModel4
 - source file: D:/Thomas/Documents/UNIF/MA2/TFE/Solver/model3/runModel4.py
 - modeling time: 1.53 sec
 - number of integer variables:  0
 - number of interval variables: 222
 - number of expressions:        930
 - number of expression nodes:   4005
 - operations:                   _trunc: 200, and: 208, endBeforeStart: 49, endOf: 355, equal: 122, floatDiv: 200, forbidExtent: 232, forbidStart: 25, greaterOrEqual: 269, lessOrEqual: 355, minimize: 1, noOverlap: 125, or: 41, scalProd: 1, startEval: 143, startOf: 577, sum: 2
StartSolve: Unknown, objective: None bounds: None, gaps: None, time: 0, memory: 1197000
StartExtraction: Unknown, objective: None bounds: None, gaps: None, time: 0, memory: 1199928
 ! --------------------------------------------------- CP Optimizer 20.1.0.0 --
 ! Minimization problem - 347 variables, 928 constraints
 ! Presolve      : 216 extractables eliminated, 35 constraints generated
 ! TimeLimit            = 4200
 ! LogVerbosity         = Terse
 ! Initial process time : 0.02s (0.02s extraction + 0.00s propagation)
 !  . Log search space  : 875.4 (before), 875.4 (after)
 !  . Memory usage      : 3.0 MB (before), 3.0 MB (after)
 ! Using parallel search with 12 workers.
 ! ----------------------------------------------------------------------------
 !          Best Branches  Non-fixed    W       Branch decision
EndExtraction: Unknown, objective: None bounds: None, gaps: None, time: 0.019, memory: 4578976
StartSearch: Unknown, objective: None bounds: None, gaps: None, time: 0.026, memory: 4585840
StartInitialPropagation: Unknown, objective: None bounds: None, gaps: None, time: 0.027, memory: 4586576
EndInitialPropagation: Unknown, objective: None bounds: None, gaps: None, time: 0.029, memory: 4783088
                        0        290                 -
 + New bound is 0
ObjBound: Unknown, objective: None bounds: (0,), gaps: None, time: 0.03, memory: 4783506
 ! Using iterative diving.
 ! Using temporal relaxation.
 ! Using failure-directed search.
 *           151     677k  38.41s       1      (gap is 100.0%)
Solution: Feasible, objective: (151,) bounds: (0,), gaps: (1,), time: 38.401, memory: 42045637
 *           144    1082k  38.81s       6      (gap is 100.0%)
Solution: Feasible, objective: (144,) bounds: (0,), gaps: (1,), time: 38.803, memory: 44005044
 *           136    1082k  39.68s       6      (gap is 100.0%)
Solution: Feasible, objective: (136,) bounds: (0,), gaps: (1,), time: 39.676, memory: 44439237
 *           134    1082k  39.68s       6      (gap is 100.0%)
Solution: Feasible, objective: (134,) bounds: (0,), gaps: (1,), time: 39.678, memory: 44439589
 *           129    1083k  39.68s       6      (gap is 100.0%)
Solution: Feasible, objective: (129,) bounds: (0,), gaps: (1,), time: 39.68, memory: 44444893
 *           117    1085k  39.82s       6      (gap is 100.0%)
Solution: Feasible, objective: (117,) bounds: (0,), gaps: (1,), time: 39.813, memory: 55022620
 *           112    1087k  39.82s       6      (gap is 100.0%)
Solution: Feasible, objective: (112,) bounds: (0,), gaps: (1,), time: 39.815, memory: 55022320
 *           101    1088k  39.82s       6      (gap is 100.0%)
Solution: Feasible, objective: (101,) bounds: (0,), gaps: (1,), time: 39.817, memory: 55021265
 *            99    1096k  40.22s       6      (gap is 100.0%)
Solution: Feasible, objective: (99,) bounds: (0,), gaps: (1,), time: 40.217, memory: 57479847
 *            97    1096k  40.22s       6      (gap is 100.0%)
Solution: Feasible, objective: (97,) bounds: (0,), gaps: (1,), time: 40.219, memory: 57480270
 *            89    1097k  40.35s       6      (gap is 100.0%)
Solution: Feasible, objective: (89,) bounds: (0,), gaps: (1,), time: 40.344, memory: 58712023
 *            87    14922  40.62s      12      (gap is 100.0%)
Solution: Feasible, objective: (87,) bounds: (0,), gaps: (1,), time: 40.613, memory: 58999192
 *            86    25215  40.75s      10      (gap is 100.0%)
Solution: Feasible, objective: (86,) bounds: (0,), gaps: (1,), time: 40.75, memory: 59221523
 *            85    22228  40.75s      11      (gap is 100.0%)
Solution: Feasible, objective: (85,) bounds: (0,), gaps: (1,), time: 40.752, memory: 59222600
 *            83    20421  41.02s      12      (gap is 100.0%)
Solution: Feasible, objective: (83,) bounds: (0,), gaps: (1,), time: 41.016, memory: 59287027
 *            82    23519  41.16s      12      (gap is 100.0%)
Solution: Feasible, objective: (82,) bounds: (0,), gaps: (1,), time: 41.162, memory: 59352091
 *            81    1108k  41.45s       6      (gap is 100.0%)
Solution: Feasible, objective: (81,) bounds: (0,), gaps: (1,), time: 41.447, memory: 59414098
 *            79    29365  41.87s      12      (gap is 100.0%)
Solution: Feasible, objective: (79,) bounds: (0,), gaps: (1,), time: 41.866, memory: 59481723
 *            75    39605  42.01s      10      (gap is 100.0%)
 ! Time = 42.01s, Average fail depth = 129, Memory usage = 59.5 MB
 ! Current bound is 0 (gap is 100.0%)
 !          Best Branches  Non-fixed    W       Branch decision
Solution: Feasible, objective: (75,) bounds: (0,), gaps: (1,), time: 42.008, memory: 59549236
 *            74    36425  42.45s      12      (gap is 100.0%)
Solution: Feasible, objective: (74,) bounds: (0,), gaps: (1,), time: 42.447, memory: 60601886
 *            72    36483  42.45s      12      (gap is 100.0%)
Solution: Feasible, objective: (72,) bounds: (0,), gaps: (1,), time: 42.448, memory: 60601534
 *            71    1121k  42.59s       6      (gap is 100.0%)
Solution: Feasible, objective: (71,) bounds: (0,), gaps: (1,), time: 42.587, memory: 60655966
 *            69    1130k  43.45s       6      (gap is 100.0%)
Solution: Feasible, objective: (69,) bounds: (0,), gaps: (1,), time: 43.451, memory: 61668628
 *            68    54506  43.61s      11      (gap is 100.0%)
Solution: Feasible, objective: (68,) bounds: (0,), gaps: (1,), time: 43.602, memory: 61870009
 *            65    54661  43.61s      11      (gap is 100.0%)
Solution: Feasible, objective: (65,) bounds: (0,), gaps: (1,), time: 43.604, memory: 61870559
 *            64    54399  44.07s      12      (gap is 100.0%)
Solution: Feasible, objective: (64,) bounds: (0,), gaps: (1,), time: 44.066, memory: 62815078
 *            62    57806  44.38s      12      (gap is 100.0%)
Solution: Feasible, objective: (62,) bounds: (0,), gaps: (1,), time: 44.376, memory: 62817696
 *            61    1078k  44.68s       2      (gap is 100.0%)
Solution: Feasible, objective: (61,) bounds: (0,), gaps: (1,), time: 44.679, memory: 63034859
 *            60    1140k  44.68s       6      (gap is 100.0%)
Solution: Feasible, objective: (60,) bounds: (0,), gaps: (1,), time: 44.681, memory: 63034645
 *            57    1142k  44.83s       6      (gap is 100.0%)
Solution: Feasible, objective: (57,) bounds: (0,), gaps: (1,), time: 44.822, memory: 63107028
 *            54    66886  45.13s      10      (gap is 100.0%)
Solution: Feasible, objective: (54,) bounds: (0,), gaps: (1,), time: 45.127, memory: 63177701
 *            52    68862  45.28s      10      (gap is 100.0%)
Solution: Feasible, objective: (52,) bounds: (0,), gaps: (1,), time: 45.279, memory: 63134342
 *            50    1084k  45.61s       8      (gap is 100.0%)
Solution: Feasible, objective: (50,) bounds: (0,), gaps: (1,), time: 45.609, memory: 63395051
 *            48    76079  46.14s      11      (gap is 100.0%)
Solution: Feasible, objective: (48,) bounds: (0,), gaps: (1,), time: 46.14, memory: 63462649
 *            47    1281k  63.18s       3      (gap is 100.0%)
Solution: Feasible, objective: (47,) bounds: (0,), gaps: (1,), time: 63.181, memory: 64873571
 *            45     280k  68.70s      11      (gap is 100.0%)
Solution: Feasible, objective: (45,) bounds: (0,), gaps: (1,), time: 68.7, memory: 64892627
 *            43    1330k  73.21s       2      (gap is 100.0%)
Solution: Feasible, objective: (43,) bounds: (0,), gaps: (1,), time: 73.206, memory: 64913250
 *            42    1840k  94.63s       4      (gap is 100.0%)
Solution: Feasible, objective: (42,) bounds: (0,), gaps: (1,), time: 94.625, memory: 65129881
 *            41     703k  121.34s     12      (gap is 100.0%)
 ! Time = 121.34s, Average fail depth = 97, Memory usage = 65.2 MB
 ! Current bound is 0 (gap is 100.0%)
 !          Best Branches  Non-fixed    W       Branch decision
Solution: Feasible, objective: (41,) bounds: (0,), gaps: (1,), time: 121.332, memory: 65233928
 *            40    1876k  133.01s      6      (gap is 100.0%)
Solution: Feasible, objective: (40,) bounds: (0,), gaps: (1,), time: 133.003, memory: 65305409
 *            39    2575k  176.90s      4      (gap is 100.0%)
Solution: Feasible, objective: (39,) bounds: (0,), gaps: (1,), time: 176.899, memory: 65495977
 *            38    1135k  177.29s     12      (gap is 100.0%)
Solution: Feasible, objective: (38,) bounds: (0,), gaps: (1,), time: 177.285, memory: 65496105
 *            37    2146k  177.49s      2      (gap is 100.0%)
Solution: Feasible, objective: (37,) bounds: (0,), gaps: (1,), time: 177.491, memory: 65947586
 *            36    2631k  182.28s      4      (gap is 100.0%)
Solution: Feasible, objective: (36,) bounds: (0,), gaps: (1,), time: 182.276, memory: 66221556
 *            34    2703k  182.48s      5      (gap is 100.0%)
Solution: Feasible, objective: (34,) bounds: (0,), gaps: (1,), time: 182.477, memory: 66795843
 *            33    2217k  194.54s      2      (gap is 100.0%)
Solution: Feasible, objective: (33,) bounds: (0,), gaps: (1,), time: 194.536, memory: 66905330
 *            32    3633k  371.47s      8      (gap is 100.0%)
Solution: Feasible, objective: (32,) bounds: (0,), gaps: (1,), time: 371.466, memory: 66511726
 *            31    4219k  372.21s      4      (gap is 100.0%)
Solution: Feasible, objective: (31,) bounds: (0,), gaps: (1,), time: 372.211, memory: 66504018
 *            30    3681k  372.41s      6      (gap is 100.0%)
Solution: Feasible, objective: (30,) bounds: (0,), gaps: (1,), time: 372.406, memory: 66892316
 *            29    4021k  374.19s      9      (gap is 100.0%)
Solution: Feasible, objective: (29,) bounds: (0,), gaps: (1,), time: 374.182, memory: 67050567
 *            27   13052k  1630.13s     3      (gap is 100.0%)
Solution: Feasible, objective: (27,) bounds: (0,), gaps: (1,), time: 1630.12, memory: 71708442
 *            25   12665k  1680.38s    10      (gap is 100.0%)
Solution: Feasible, objective: (25,) bounds: (0,), gaps: (1,), time: 1680.38, memory: 71914033
 *            24   13959k  1757.14s     3      (gap is 100.0%)
Solution: Feasible, objective: (24,) bounds: (0,), gaps: (1,), time: 1757.14, memory: 72232567
 *            23   14403k  1758.23s     7      (gap is 100.0%)
Solution: Feasible, objective: (23,) bounds: (0,), gaps: (1,), time: 1758.23, memory: 72225184
 ! ----------------------------------------------------------------------------
 ! Search terminated by limit, 54 solutions found.
 ! Best objective         : 23 (gap is 100.0%)
 ! Best bound             : 0
 ! ----------------------------------------------------------------------------
 ! Number of branches     : 387215101
 ! Number of fails        : 156945699
 ! Total memory usage     : 81.5 MB (81.4 MB CP Optimizer + 0.2 MB Concert)
 ! Time spent in solve    : 4200.40s (4200.38s engine + 0.02s extraction)
 ! Search speed (br. / s) : 92185.8
 ! ----------------------------------------------------------------------------
EndSearch: Feasible, objective: None bounds: None, gaps: None, time: 4200.4, memory: 81363732
EndSolve: Feasible, objective: None bounds: None, gaps: None, time: 4200.4, memory: 81363476
4200.735630512238
-------------------------------------------------------------------------------
Model constraints: 928, variables: integer: 0, interval: 222, sequence: 125
Solve status: Feasible
Search status: SearchStopped, stop cause: SearchStoppedByLimit
Solve time: 4200.42 sec
-------------------------------------------------------------------------------
Objective values: (23,), bounds: (0,), gaps: (1,)
Variables:
   I-AUTO-023_lec_0 = (16, 17, 1)
   I-AUTO-023_lec_1 = (24, 25, 1)
   I-AUTO-023_lec_2 = (17, 18, 1)
   I-AUTO-023_lec_3 = (36, 37, 1)
   I-FLMA-001_lec_0 = (6, 7, 1)
   I-FLMA-001_lec_1 = (25, 26, 1)
   I-FLMA-001_lec_2 = (14, 15, 1)
   I-FLMA-001_lec_3 = (37, 38, 1)
   I-GCMS-005_lec_0 = (9, 10, 1)
   I-GCMS-005_lec_1 = (28, 29, 1)
   I-GCMS-005_lec_2 = (13, 14, 1)
   I-GCMS-005_lec_3 = (36, 37, 1)
   I-GCMS-021_ex_0_g_0 = (18, 19, 1)
   I-GCMS-021_ex_1_g_0 = (33, 34, 1)
   I-GCMS-021_lec_0 = (4, 5, 1)
   I-GCMS-021_lec_1 = (21, 22, 1)
   I-GEOL-001_lec_0 = (8, 9, 1)
   I-GEOL-001_lec_1 = (29, 30, 1)
   I-GEOL-001_lec_2 = (17, 18, 1)
   I-GEOL-001_pr_0 = (2, 4, 2)
   I-GEOL-001_pr_1 = (30, 32, 2)
   I-GMEC-001_lec_0 = (0, 1, 1)
   I-GMEC-001_lec_1 = (20, 21, 1)
   I-GMEC-001_lec_2 = (12, 13, 1)
   I-GMEC-021_ex_0_g_0 = (26, 27, 1)
   I-GMEC-021_ex_1_g_0 = (27, 28, 1)
   I-GMEC-021_lec_0 = (16, 17, 1)
   I-GMEC-021_lec_1 = (25, 26, 1)
   I-GMEC-023_ex_0_g_0 = (39, 40, 1)
   I-GMEC-023_ex_0_g_1 = (38, 39, 1)
   I-GMEC-023_lec_0 = (9, 10, 1)
   I-GMEC-023_lec_1 = (28, 29, 1)
   I-GMEC-023_lec_2 = (13, 14, 1)
   I-GMEC-023_lec_3 = (29, 30, 1)
   I-GMEC-023_tp_0_g_0 = (34, 36, 2)
   I-GMEC-023_tp_0_g_1 = (30, 32, 2)
   I-GMIN-001_ex_0_g_0 = (26, 27, 1)
   I-GMIN-001_lec_0 = (1, 2, 1)
   I-GMIN-001_lec_1 = (24, 25, 1)
   I-GMIN-011_lec_0 = (0, 1, 1)
   I-GMIN-011_lec_1 = (20, 21, 1)
   I-GMIN-011_lec_2 = (12, 13, 1)
   I-GPRO-001_lec_0 = (12, 13, 1)
   I-GPRO-001_lec_1 = (29, 30, 1)
   I-GPRO-028_lec_0 = (5, 6, 1)
   I-GPRO-028_lec_1 = (32, 33, 1)
   I-GPRO-028_lec_2 = (16, 17, 1)
   I-GPRO-029_lec_0 = (1, 2, 1)
   I-GPRO-029_lec_1 = (20, 21, 1)
   I-GPRO-029_lec_2 = (9, 10, 1)
   I-GRCM-031A_pr_0 = (18, 20, 2)
   I-GRCM-031A_pr_1 = (26, 28, 2)
   I-ILIA-002_lec_0 = (8, 9, 1)
   I-ILIA-002_lec_1 = (37, 38, 1)
   I-ILIA-002_lec_2 = (17, 18, 1)
   I-ILIA-004_lec_0 = (28, 29, 1)
   I-ILIA-004_tp_0_g_0 = (38, 40, 2)
   I-ILIA-024_ex_0_g_0 = (26, 27, 1)
   I-ILIA-024_lec_0 = (5, 6, 1)
   I-ILIA-024_pr_0 = (2, 4, 2)
   I-ILIA-024_pr_1 = (34, 36, 2)
   I-ILIA-024_tp_0_g_0 = (32, 34, 2)
   I-ILIA-100_ch2_0 = (6, 8, 2)
   I-ILIA-100_ch2_1 = (26, 28, 2)
   I-ISIA-001_ex_0_g_0 = (2, 3, 1)
   I-ISIA-001_ex_1_g_0 = (27, 28, 1)
   I-ISIA-001_lec_0 = (1, 2, 1)
   I-ISIA-001_lec_1 = (21, 22, 1)
   I-ISIA-001_lec_2 = (26, 27, 1)
   I-ISIA-001_tp_0_g_0 = (28, 30, 2)
   I-ISIA-020_lec_0 = (0, 1, 1)
   I-ISIA-020_lec_1 = (20, 21, 1)
   I-ISIA-020_lec_2 = (12, 13, 1)
   I-ISIA-020_tp_0_g_0 = (18, 20, 2)
   I-ISIA-030_lec_0 = (9, 10, 1)
   I-ISIA-030_lec_1 = (20, 21, 1)
   I-ISIA-030_lec_2 = (12, 13, 1)
   I-MANA-002_lec_0 = (13, 14, 1)
   I-MANA-002_lec_1 = (36, 37, 1)
   I-MANA-102_ch2_0 = (10, 12, 2)
   I-MANA-102_ch2_1 = (30, 32, 2)
   I-MARO-004_ex_0_g_0 = (18, 19, 1)
   I-MARO-004_lec_0 = (4, 5, 1)
   I-MARO-004_lec_1 = (21, 22, 1)
   I-MARO-004_lec_2 = (24, 25, 1)
   I-MARO-014_lec_0 = (1, 2, 1)
   I-MARO-014_lec_1 = (24, 25, 1)
   I-MARO-014_tp_0_g_0 = (16, 18, 2)
   I-MARO-020_ex_0_g_0 = (12, 13, 1)
   I-MARO-020_ex_1_g_0 = (23, 24, 1)
   I-MARO-020_lec_0 = (5, 6, 1)
   I-MARO-020_lec_1 = (20, 21, 1)
   I-MARO-021_ex_0_g_0 = (2, 3, 1)
   I-MARO-021_ex_0_g_1 = (9, 10, 1)
   I-MARO-021_ex_1_g_0 = (37, 38, 1)
   I-MARO-021_ex_1_g_1 = (33, 34, 1)
   I-MARO-021_lec_0 = (0, 1, 1)
   I-MARO-021_lec_1 = (28, 29, 1)
   I-MARO-024_ex_0_g_0 = (26, 27, 1)
   I-MARO-024_lec_0 = (9, 10, 1)
   I-MARO-024_lec_1 = (22, 23, 1)
   I-MARO-035_ex_0_g_0 = (8, 9, 1)
   I-MARO-035_ex_1_g_0 = (36, 37, 1)
   I-MARO-035_lec_0 = (4, 5, 1)
   I-MARO-035_lec_1 = (29, 30, 1)
   I-MARO-120_ch2_0 = (18, 20, 2)
   I-MARO-120_ch2_1 = (38, 40, 2)
   I-MARO-121_ch2_0 = (2, 4, 2)
   I-MARO-121_ch2_1 = (22, 24, 2)
   I-META-001_lec_0 = (13, 14, 1)
   I-META-001_lec_1 = (33, 34, 1)
   I-META-101_lec_0 = (1, 2, 1)
   I-META-101_lec_1 = (32, 33, 1)
   I-META-101_lec_2 = (5, 6, 1)
   I-MRDV-020_ex_0_g_0 = (34, 35, 1)
   I-MRDV-020_lec_0 = (17, 18, 1)
   I-MRDV-020_lec_1 = (29, 30, 1)
   I-MRDV-022_ex_0_g_0 = (19, 20, 1)
   I-MRDV-022_ex_1_g_0 = (38, 39, 1)
   I-MRDV-022_lec_0 = (12, 13, 1)
   I-MRDV-022_lec_1 = (32, 33, 1)
   I-MRDV-022_lec_2 = (16, 17, 1)
   I-MRDV-022_lec_3 = (33, 34, 1)
   I-MRDV-120_ch2_0 = (10, 12, 2)
   I-MRDV-120_ch2_1 = (30, 32, 2)
   I-PHYS-020_ex_0_g_0 = (36, 37, 1)
   I-PHYS-020_ex_0_g_1 = (37, 38, 1)
   I-PHYS-020_lec_0 = (1, 2, 1)
   I-PHYS-020_lec_1 = (32, 33, 1)
   I-PHYS-020_tp_0_g_0 = (14, 16, 2)
   I-PHYS-020_tp_0_g_1 = (8, 10, 2)
   I-PHYS-020_tp_0_g_2 = (18, 20, 2)
   I-PHYS-020_tp_0_g_3 = (2, 4, 2)
   I-PHYS-022_lec_0 = (0, 1, 1)
   I-PHYS-022_lec_1 = (20, 21, 1)
   I-POLY-001_lec_0 = (4, 5, 1)
   I-POLY-001_lec_1 = (24, 25, 1)
   I-POLY-011_pr_0 = (6, 8, 2)
   I-POLY-011_pr_1 = (38, 40, 2)
   I-POLY-012_ch2_0 = (14, 16, 2)
   I-POLY-012_ch2_1 = (34, 36, 2)
   I-SDMA-014_lec_0 = (4, 5, 1)
   I-SDMA-014_lec_1 = (21, 22, 1)
   I-SDMA-014_lec_2 = (8, 9, 1)
   I-SDMA-014_lec_3 = (24, 25, 1)
   I-SDMA-020_ex_0_g_0 = (18, 19, 1)
   I-SDMA-020_ex_0_g_1 = (14, 15, 1)
   I-SDMA-020_ex_1_g_0 = (22, 23, 1)
   I-SDMA-020_ex_1_g_1 = (36, 37, 1)
   I-SDMA-020_lec_0 = (13, 14, 1)
   I-SDMA-020_lec_1 = (21, 22, 1)
   I-SDMA-021_ex_0_g_0 = (34, 35, 1)
   I-SDMA-021_lec_0 = (1, 2, 1)
   I-SDMA-021_lec_1 = (28, 29, 1)
   I-SDMA-021_lec_2 = (29, 30, 1)
   I-SDMA-021_tp_0_g_0 = (2, 4, 2)
   I-SDMA-021_tp_0_g_1 = (6, 8, 2)
   I-SDMA-021_tp_0_g_2 = (14, 16, 2)
   I-SDMA-021_tp_0_g_3 = (10, 12, 2)
   I-SDMA-120_ch2_0 = (6, 8, 2)
   I-SDMA-120_ch2_1 = (26, 28, 2)
   I-SDMA-121_ch2_0 = (14, 16, 2)
   I-SDMA-121_ch2_1 = (34, 36, 2)
   I-SEMI-001_ex_0_g_0 = (23, 24, 1)
   I-SEMI-001_lec_0 = (10, 11, 1)
   I-SEMI-001_lec_1 = (22, 23, 1)
   I-TELE-003_lec_0 = (4, 5, 1)
   I-TELE-003_lec_1 = (30, 31, 1)
   I-TELE-003_lec_2 = (5, 6, 1)
   I-TELE-003_lec_3 = (32, 33, 1)
   I-TELE-003_lec_4 = (8, 9, 1)
   I-TELE-003_lec_5 = (33, 34, 1)
   I-TELE-003_tp_0_g_0 = (34, 36, 2)
   I-TELE-003_tp_0_g_1 = (38, 40, 2)
   I-TRMO-003_lec_0 = (0, 1, 1)
   I-TRMO-003_lec_1 = (28, 29, 1)
   I-TRMO-003_lec_2 = (17, 18, 1)
   I-TRMO-003_lec_3 = (36, 37, 1)
   I-TRMO-020_ex_0_g_0 = (31, 32, 1)
   I-TRMO-020_lec_0 = (5, 6, 1)
   I-TRMO-020_lec_1 = (25, 26, 1)
   I-TRMO-020_lec_2 = (30, 31, 1)
   I-TRMO-120_ch2_0 = (2, 4, 2)
   I-TRMO-120_ch2_1 = (22, 24, 2)
   S-INFO-013_lec_0 = (0, 1, 1)
   S-INFO-013_lec_1 = (21, 22, 1)
   V-LANG-151_ex_0_g_0 = (9, 10, 1)
   V-LANG-151_ex_0_g_1 = (8, 9, 1)
   V-LANG-151_ex_0_g_2 = (14, 15, 1)
   V-LANG-151_ex_0_g_3 = (14, 15, 1)
   V-LANG-151_ex_0_g_4 = (3, 4, 1)
   V-LANG-151_ex_0_g_5 = (2, 3, 1)
   V-LANG-151_ex_0_g_6 = (8, 9, 1)
   V-LANG-151_ex_0_g_7 = (15, 16, 1)
   V-LANG-151_ex_1_g_0 = (33, 34, 1)
   V-LANG-151_ex_1_g_1 = (33, 34, 1)
   V-LANG-151_ex_1_g_2 = (33, 34, 1)
   V-LANG-151_ex_1_g_3 = (35, 36, 1)
   V-LANG-151_ex_1_g_4 = (22, 23, 1)
   V-LANG-151_ex_1_g_5 = (22, 23, 1)
   V-LANG-151_ex_1_g_6 = (22, 23, 1)
   V-LANG-151_ex_1_g_7 = (35, 36, 1)
   V-LANG-153_ex_0_g_0 = (6, 7, 1)
   V-LANG-153_ex_0_g_1 = (2, 3, 1)
   V-LANG-153_ex_0_g_2 = (3, 4, 1)
   V-LANG-153_ex_0_g_3 = (2, 3, 1)
   V-LANG-153_ex_1_g_0 = (23, 24, 1)
   V-LANG-153_ex_1_g_1 = (23, 24, 1)
   V-LANG-153_ex_1_g_2 = (23, 24, 1)
   V-LANG-153_ex_1_g_3 = (39, 40, 1)
   V-LANG-155_ex_0_g_0 = (15, 16, 1)
   V-LANG-155_ex_0_g_1 = (3, 4, 1)
   V-LANG-155_ex_0_g_2 = (7, 8, 1)
   V-LANG-155_ex_0_g_3 = (11, 12, 1)
   V-LANG-155_ex_1_g_0 = (27, 28, 1)
   V-LANG-155_ex_1_g_1 = (31, 32, 1)
   V-LANG-155_ex_1_g_2 = (26, 27, 1)
   V-LANG-155_ex_1_g_3 = (30, 31, 1)
   V-LANG-161_ch2_0 = (0, 2, 2)
   V-LANG-161_ch2_1 = (20, 22, 2)
   V-LANG-162_ch2_0 = (4, 6, 2)
   V-LANG-162_ch2_1 = (24, 26, 2)
20.783617973327637

Process finished with exit code 0
